@model SportLab.ViewModel.ClubDetailViewModel
@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<h4>ClubDetailViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <div>
            <img src="@Model.GetImage()" />
        </div>
        <form asp-action="Details">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Id" class="control-label"></label><br />
                @Html.DisplayFor(model => model.Id)
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Country" class="control-label"></label>
                <select asp-for="Country" asp-items="Model.GetCountries()">
                </select>
                <span asp-validation-for="Country" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Eliminated" /> @Html.DisplayNameFor(model => model.Eliminated)
                </label>
            </div>
            <h5>
                <a href="@Model.GetTeamDetail()">Click Here for More Info About the Team</a>
            </h5>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
       
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
